!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("ngx-virtual-scroller"),require("@angular/common"),require("@angular/platform-browser-dynamic"),require("@angular/core")):"function"==typeof define&&define.amd?define("ngx-ui-table",["exports","ngx-virtual-scroller","@angular/common","@angular/platform-browser-dynamic","@angular/core"],t):t(e["ngx-ui-table"]={},e.ngxVirtualScroller,e.ng.common,e.ng.platformBrowserDynamic,e.ng.core)}(this,function(e,t,n,o,r){"use strict";function a(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var o,a,i=n.call(e),r=[];try{for(;(void 0===t||0<t--)&&!(o=i.next()).done;)r.push(o.value)}catch(l){a={error:l}}finally{try{o&&!o.done&&(n=i["return"])&&n.call(i)}finally{if(a)throw a.error}}return r}var i=(Object.defineProperty(l.prototype,"setColumns",{set:function(e){e&&(this.tableColumns=e.map(function(e){return e.hasOwnProperty("hide")||(e.hide=!1),e}))},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"setSearch",{set:function(n){var e=this;this.tableDataCopy=n?this.tableData.filter(function(t){return 0<e.tableKeys.filter(function(e){return t[e].toString().toLocaleLowerCase().includes(n.toString())}).length}):this.tableData},enumerable:!0,configurable:!0}),l.prototype.ngOnInit=function(){this.tableKeys=Object.keys(this.tableData[0]),this.tableDataCopy=function n(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(a(arguments[t]));return e}(this.tableData)},l.prototype.hasTemplate=function(e){return!(!e.template||!e.template.htmlString&&!e.template.ngTemplate)},l.prototype.onRowClicked=function(e,t){this.tableActions.emit({payload:t,type:"ROW_CLICKED"}),e.stopPropagation()},l.prototype.onSelectedAllChecked=function(t){switch(t.type){case"CHECKBOX_SELECTED_ALL":t.payload.checked?this.selectedItems=this.tableData:this.selectedItems=[];var e=this.tableData.map(function(e){return e.checked=!1,e});this.tableData=e.map(function(e){return e.checked=t.payload.checked,e}),this.tableActions.emit({type:"CHECKBOX_SELECTED_ALL",payload:this.tableData})}},l.prototype.onOneItemChecked=function(e){switch(e.type){case"CHECKBOX_SELECTED_ITEMS_CHANGED":0===this.selectedItems.length&&(this.selectedItems=e.payload),this.tableActions.emit(e)}},l.prototype.columnActions=function(e){var n=e.payload;switch(e.type){case"COLUMN_SORT_CHANGED":"asc"===n.sort?this.tableDataCopy=[].concat(this.tableDataCopy||[]).sort(function(e,t){return-(e[n.field]<t[n.field])||+(e[n.field]!==t[n.field])}):this.tableDataCopy=[].concat(this.tableDataCopy||[]).sort(function(e,t){return-(t[n.field]<e[n.field])||+(t[n.field]!==e[n.field])})}this.tableActions.emit(e)},l.decorators=[{type:r.Component,args:[{selector:"ngx-ui-table",template:'<div class="ngx-ui-table-container" [ngStyle]="{\'height\': tableOptions?.tableHeight || \'600px\'}">\n  <virtual-scroller #scroll [items]="tableDataCopy">\n    <table  class="table" [ngClass]="(tableOptions?.tableHover) ? \'table-hover\': \'\'">\n      <thead #header >\n      <tr class="table-header">\n        <th  class="tbl-xs">\n          <div class="checkbox-selected-all">\n            <checkbox [selectedType]="\'all\'"\n                          [item]="selectedAll"\n                          (checkBoxAction)="onSelectedAllChecked($event)">\n            </checkbox>\n          </div>\n        </th>\n        <th *ngFor="let column of  tableColumns | ngxUiColumnsPipe" >\n          <div class="sortable" *ngIf="!column.hide">\n            <ngx-ui-table-column\n              (columnActions)="columnActions($event)"\n              [tableData]="tableDataCopy"\n              [column]="column">\n            </ngx-ui-table-column>\n          </div>\n        </th>\n      </tr>\n      </thead>\n      <tbody  #container>\n      <tr *ngFor="let row of  scroll.viewPortItems" class="ngx-ui-table-row">\n        <td class="tbl-xs">\n          <checkbox\n            [item]="row"\n            [selectedItems]="selectedItems"\n            (checkBoxAction)="onOneItemChecked($event)">\n          </checkbox>\n        </td>\n        <td *ngFor="let column of tableColumns  | ngxUiColumnsPipe" [ngClass]="(column.size) ? column.size : \'tbl-md\'"\n            (click)="onRowClicked($event, row)">\n          <div *ngIf="!column.hide">\n            <div *ngIf="hasTemplate(column); else defaultRow">\n              <div *ngIf="column.template.htmlString; else ngTemplate">\n                <dynamic-content [templateString]="column.template.htmlString(row, column)">\n                </dynamic-content>\n              </div>\n              <ng-template  #ngTemplate\n                            [ngTemplateOutlet]="column.template.ngTemplate"\n                            [ngTemplateOutletContext]="{row: row,column: column}">\n              </ng-template>\n            </div>\n            <ng-template #defaultRow>\n              <div>{{ row[column.field]}}</div>\n            </ng-template>\n          </div>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </virtual-scroller>\n</div>\n',changeDetection:r.ChangeDetectionStrategy.OnPush,styles:["virtual-scroller{height:inherit}.ngx-ui-table-container .table-header{box-shadow:1px 2px 6px 3px rgba(0,0,0,.1);height:40px;border-radius:2px;background-color:#fdfdfd}.ngx-ui-table-container .table{width:100%;max-width:100%;margin-bottom:20px;margin-top:-2px}.ngx-ui-table-container table{background-color:transparent}.ngx-ui-table-container .table>tbody>tr>td,.ngx-ui-table-container .table>tbody>tr>th,.ngx-ui-table-container .table>tfoot>tr>td,.ngx-ui-table-container .table>tfoot>tr>th,.ngx-ui-table-container .table>thead>tr>td,.ngx-ui-table-container .table>thead>tr>th{padding:2px;vertical-align:middle}.ngx-ui-table-container th{text-align:left}.ngx-ui-table-container td,.ngx-ui-table-container th{padding:0}.ngx-ui-table-container .table-hover>tbody>tr:hover{background-color:#f5f5f5;cursor:pointer}.ngx-ui-table-container .tbl-xs{width:.5%}.ngx-ui-table-container .tbl-sm{width:14%}.ngx-ui-table-container .tbl-md{width:18%}.ngx-ui-table-container .tbl-lg{width:25%}"]}]}],l.ctorParameters=function(){return[]},l.propDecorators={tableActions:[{type:r.Output}],tableData:[{type:r.Input}],setColumns:[{type:r.Input,args:["columns"]}],tableOptions:[{type:r.Input}],setSearch:[{type:r.Input,args:["search"]}]},l);function l(){this.tableActions=new r.EventEmitter,this.tableDataCopy=[],this.tableColumns=[],this.selectedItems=[],this.selectedAll={},this.tableKeys=[]}var c=(Object.defineProperty(s.prototype,"setColumn",{set:function(e){e&&((this.col=e).isHaveFilter,e.hasOwnProperty("sort")?"desc"===this.col.sort&&this.columnActions.emit({payload:this.col,type:"COLUMN_SORT_CHANGED"}):this.col.sort="asc")},enumerable:!0,configurable:!0}),s.prototype.ngOnInit=function(){},s.prototype.onSortChanged=function(){this.col.sort="asc"===this.col.sort?"desc":"asc",this.columnActions.emit({payload:this.col,type:"COLUMN_SORT_CHANGED"})},s.decorators=[{type:r.Component,args:[{selector:"ngx-ui-table-column",template:'<div class="mdx-table-column-container {{col.className}}">\n  <div class="sorting" (click)="onSortChanged()" *ngIf="!col.notSorted">\n    <div class="{{col.sort}}"></div>\n    <div class="column-name" >\n      {{col.name}}\n    </div>\n  </div>\n  <div class="column-name" *ngIf="col.notSorted">\n    {{col.name}}\n  </div>\n  \x3c!--<div *ngIf="filter" class="filter">--\x3e\n    \x3c!--<app-ui-dropdown-icon--\x3e\n      \x3c!--[className]="\'table-filters\'"--\x3e\n      \x3c!--[items]="filter"--\x3e\n      \x3c!--[showFilterIcon]="true"--\x3e\n      \x3c!--[rowName]="\'name\'">--\x3e\n    \x3c!--</app-ui-dropdown-icon>--\x3e\n  \x3c!--</div>--\x3e\n\n</div>\n',styles:["virtual-scroller{width:100%;height:95vh}.sorting{display:flex}.sorting .asc,.sorting .desc{width:18px}.sorting .asc:after{content:' \\25B2';color:#d3d3d3}.sorting .desc:after{content:' \\25BC';color:#d3d3d3}"]}]}],s.ctorParameters=function(){return[]},s.propDecorators={columnActions:[{type:r.Output}],setColumn:[{type:r.Input,args:["column"]}],tableData:[{type:r.Input}]},s);function s(){this.columnActions=new r.EventEmitter}var p=(Object.defineProperty(d.prototype,"setItem",{set:function(e){e&&(this._item=e,this._item.hasOwnProperty("checked")||(this._item.checked=!1))},enumerable:!0,configurable:!0}),d.prototype.onCheckboxChanged=function(e){"all"===this.selectedType?this.checkBoxAction.emit({payload:{checked:e.target.checked},type:"CHECKBOX_SELECTED_ALL"}):(this.addOrRemoveItem(this._item),this.checkBoxAction.emit({payload:this.selectedItems,type:"CHECKBOX_SELECTED_ITEMS_CHANGED"})),e.stopPropagation()},d.prototype.addOrRemoveItem=function(e){var t=this.selectedItems.indexOf(e);-1===t?this.selectedItems.push(e):this.selectedItems.splice(t,1)},d.prototype.ngOnInit=function(){},d.decorators=[{type:r.Component,args:[{selector:"checkbox",template:'<label class="lbl">\n  <input type="checkbox"\n         [name]="label"\n         [checked]="_item?.checked"\n         (change)="onCheckboxChanged($event)"/>\n</label>\n',styles:["input[type=checkbox]{cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:0;background:#d3d3d3;height:16px;width:16px;border:1px solid #fff}input[type=checkbox]:checked{background:#2aa1c0}input[type=checkbox]:hover{-webkit-filter:brightness(90%);filter:brightness(90%)}input[type=checkbox]:disabled{background:#e6e6e6;opacity:.6;pointer-events:none}input[type=checkbox]:after{content:'';position:relative;left:36%;top:11%;width:21%;height:54%;border:solid #fff;border-width:0 2px 2px 0;-webkit-transform:rotate(45deg);transform:rotate(45deg);display:none}input[type=checkbox]:checked:after{display:block}input[type=checkbox]:disabled:after{border-color:#7b7b7b}"]}]}],d.ctorParameters=function(){return[]},d.propDecorators={checkBoxAction:[{type:r.Output}],selectedType:[{type:r.Input}],selectedItems:[{type:r.Input}],label:[{type:r.Input}],setItem:[{type:r.Input,args:["item"]}]},d);function d(){this.checkBoxAction=new r.EventEmitter,this.label=""}var u=(Object.defineProperty(m.prototype,"setTemplateString",{set:function(e){var n=this;if(e){this.compiler.clearCache();var t=r.Component({template:e})(function a(){}),o=r.NgModule({declarations:[t]})(function i(){});this.compiler.compileModuleAndAllComponentsAsync(o).then(function(e){var t=e.componentFactories[0];n.container.createComponent(t)})}},enumerable:!0,configurable:!0}),m.prototype.ngOnInit=function(){},m.decorators=[{type:r.Component,args:[{selector:"dynamic-content",template:"<ng-container #container></ng-container>\n",changeDetection:r.ChangeDetectionStrategy.OnPush,styles:[""]}]}],m.ctorParameters=function(){return[{type:r.Compiler}]},m.propDecorators={container:[{type:r.ViewChild,args:["container",{read:r.ViewContainerRef}]}],setTemplateString:[{type:r.Input,args:["templateString"]}]},m);function m(e){this.compiler=e}function h(e){return e.createCompiler()}var b={},g=(f.decorators=[{type:r.NgModule,args:[{declarations:[u],imports:[n.CommonModule],exports:[u],providers:[{provide:r.COMPILER_OPTIONS,useValue:b,multi:!0},{provide:r.CompilerFactory,useClass:o.JitCompilerFactory,deps:[r.COMPILER_OPTIONS]},{provide:r.Compiler,useFactory:h,deps:[r.CompilerFactory]}]}]}],f);function f(){}var y=(x.prototype.transform=function(e){return e.filter(function(e){return e.hasOwnProperty("hide")?!e.hide:e})},x.decorators=[{type:r.Pipe,args:[{name:"ngxUiColumnsPipe"}]}],x);function x(){}var C=(v.decorators=[{type:r.NgModule,args:[{declarations:[i,c,p,y],imports:[n.CommonModule,t.VirtualScrollerModule,g],exports:[i,t.VirtualScrollerModule]}]}],v);function v(){}function k(){}function w(){}function I(){}e.NgxUiTableComponent=i,e.NgxUiTableModule=C,e.NgxUiColumn=k,e.TableTemplate=w,e.NgxUiTableOptions=I,e.ɵb=p,e.ɵf=u,e.ɵe=g,e.ɵd=h,e.ɵa=c,e.ɵc=y,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-ui-table.umd.min.js.map